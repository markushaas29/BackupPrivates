[DEBUG]: Array Contructor
[DEBUG]: Array Contructor
[DEBUG]: Array Contructor
[DEBUG]: Array Contructor
[DEBUG]: Array Contructor
[DEBUG]: Array Contructor
[DEBUG]: +++++++++++++++++operator+(const Matrix<M1>& m1, const Matrix<M2>& m2)
 m1: 1 m2: 2
[DEBUG]: AdditionExpression
 m1: 1 m2: 2
[DEBUG]: BinaryExpression(const LeftType& op1, const RightType& op2): ExpressionType(op1, op2)
[DEBUG]: ++++++++++++++++++operator+(const Matrix<M1>& m1, const Matrix<M2>& m2)
 expr: 3 m2: 4
[DEBUG]: AdditionExpression
 m1: 3 m2: 4
[DEBUG]: BinaryExpression(const LeftType& op1, const RightType& op2): ExpressionType(op1, op2)
[DEBUG]: ++++++++++++++++++operator+(const Matrix<M1>& m1, const Matrix<M2>& m2)
 expr: 7 m2: 2
[DEBUG]: AdditionExpression
 m1: 7 m2: 2
[DEBUG]: BinaryExpression(const LeftType& op1, const RightType& op2): ExpressionType(op1, op2)
[DEBUG]: Array Contructor
[DEBUG]: Matrix(const BinaryExpression<Expr>& expr)
[DEBUG]: Matrix<Res> Assign(Matrix<Res> const result) const
[DEBUG]: !!!!AdditionExpression Destructor!!!
[DEBUG]: AdditionExpression
 m1: 7 m2: 2
[DEBUG]: !!!!AdditionExpression Destructor!!!
[DEBUG]: AdditionExpression
 m1: 3 m2: 4
[DEBUG]: !!!!AdditionExpression Destructor!!!
[DEBUG]: AdditionExpression
 m1: 1 m2: 2
[DEBUG]: BinaryExpression<MultiplicationExpression<Matrix<M1>, Matrix<M2>>> operator*(const Matrix<M1>& m1, const Matrix<M2>& m2)
[DEBUG]: MultiplicationExpression(const Matrix<M1>& m1, const Matrix<M2>& m2): left_(m1), leftCacheMatrix_(0), rightCacheMatrix_(0),right_(m2), rows_(m1.Rows()), cols_(m2.Cols())
[DEBUG]: BinaryExpression(const LeftType& op1, const RightType& op2): ExpressionType(op1, op2)
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: DESTRUCTOR Matrix
[DEBUG]: Array Destructor
[DEBUG]: Array Destructor
